<<<<<<< HEAD
var isObjectLike = require('./isObjectLike');
=======
var baseGetTag = require('./_baseGetTag'),
    isObjectLike = require('./isObjectLike');
>>>>>>> origin/master

/** `Object#toString` result references. */
var boolTag = '[object Boolean]';

<<<<<<< HEAD
/** Used for built-in method references. */
var objectProto = global.Object.prototype;

/**
 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

=======
>>>>>>> origin/master
/**
 * Checks if `value` is classified as a boolean primitive or object.
 *
 * @static
 * @memberOf _
<<<<<<< HEAD
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
=======
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
>>>>>>> origin/master
 * @example
 *
 * _.isBoolean(false);
 * // => true
 *
 * _.isBoolean(null);
 * // => false
 */
function isBoolean(value) {
  return value === true || value === false ||
<<<<<<< HEAD
    (isObjectLike(value) && objectToString.call(value) == boolTag);
=======
    (isObjectLike(value) && baseGetTag(value) == boolTag);
>>>>>>> origin/master
}

module.exports = isBoolean;
